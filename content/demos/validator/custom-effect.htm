{% extends 'standalone.j2' %}

{% block head %}{% mark css %}
<link rel="stylesheet" type="text/css"
      href="{{ media_url('css/validator/form.css') }}"/>
<style>
{% mark css_excerpt %}
/* error container */
#errors {
	background-color:#163356;
	color:#fff;
	width:400px;
	padding:20px;
	margin:5px auto;
	display:none;
	-moz-border-radius:5px;
	-webkit-border-radius:5px;
}

/* title */
#errors h2 {
	margin:-5px 0;
	color:yellow;
}
{% endmark %}
</style>
{% endmark %}{% endblock %}

{% block body %}{% mark body %}
{% mark html_excerpt %}
<div id="errors">
  <h2>Please fix these first</h2>
</div>
{% endmark %}

{% include "demos/validator/form.fragment.htm" %}

<script>
{% mark js %}
// adds an effect called "wall" to the validator
$.tools.validator.addEffect("wall", function(errors, event) {

	// get the message wall
	var wall = $(this.getConf().container).fadeIn();

	// remove all existing messages
	wall.find("p").remove();

	// add new ones
	$.each(errors, function(index, error) {
		wall.append(
			"<p><strong>" +error.input.attr("name")+ "</strong> " +error.messages[0]+ "</p>"
		);
	});

// the effect does nothing when all inputs are valid
}, function(inputs)  {

});
{% endmark %}

{% mark init %}
// initialize validator with the new effect
$("#myform").validator({
   effect: 'wall',
   container: '#errors',

   // do not validate inputs when they are edited
   errorInputEvent: null

// custom form submission logic
}).submit(function(e)  {

   // when data is valid
   if (!e.isDefaultPrevented()) {

      // tell user that everything is OK
      $("#errors").html("<h2>All good</h2>");

      // prevent the form data being submitted to the server
      e.preventDefault();
   }

});
{% endmark %}
</script>
{% endmark %}{% endblock %}
